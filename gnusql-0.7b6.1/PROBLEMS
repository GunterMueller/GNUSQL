This file describes various problems that have been encountered
in compiling, installing and running GNU SQL Server.

1.  Server sometimes fails on repeated data insert/delete in
    subsequent transaction. 

2.  Some problem in index processing exist but the place still
    unclear now.

3.  Performance on the long run seems to be slower than it should be.
    Server interprocess communication has to be fixed. we know how
    to do it, but haven't had a time for it yet.

4.  Linux bugs:
   -testIS0.sql - irregular crashes: segmentation fault OR
                  'msgsnd' illegal argument OR some kind of memory violation
   -debugger death after debugged service death leads to 'gsqls' assertation
    fail (the same on SCO v5)
   -LJ -- rbuf -- buffer for incoming messages (bad address) - cured by moving
    declaration. quite strange behavior.

8.  On m68k-hp-hpux9.10, Gsql.
    For some reason either gqsls (or another program) does not close
    (temporary) files from time to time. I've no clues yet which files
    are being kept open. I ran against this limit of 56 files (this is the
    max that I installed per process) on my system.
    I got a warning like 'Can not open /usr/tmp/aaaa??????' and then
    it dumped the output to stdout (or stderr, who can tell:-))

10. ---------------------@@@@@
    /usr/local/share/gnusql/0.7b5/i386-sun-solaris2.5
    /disk1/sources/Gsql/etc/make-util install "ln -s"
    "/usr/local/share/gnusql/0.7b5/i386-sun-solaris2.5" "/usr/local/bin" \
                                            "/usr/local/man" "/usr/local/info"
    "/usr/local" 
    ln: cannot create
    /usr/local/include/gnusql//usr/local/share/gnusql/0.7b5/i386-sun-solaris2.5/
    client: No such file or directory

12. From time to time I get a 
    makegr.c:<line number> Incorrect type '0' (or other values).
    I traced this down to tuple_break in the same file makegr.c. The
    macro get_length report this when an illegal (type) value is found.

    Specifically this happens on my machine when test15 is running. I
    hunted this down a bit further and found that when I run a
    select * from DEFINITION_SCHEMA.SYSCOLUMS; on the monitor program
    this query fails. It appears that something is corrupting this
    (important) table. 

    I suspect this falls into the alignment category that I had earlier.
    On the hppa1.1-hp-hpux10.20 (at my work, needless to say...) it doesn't
    fail.

    It appears that the m68k-hp-hpux9.10 always aligns structures at 2 bytes
    while the rest of the systems (like hppa1.1-hp-hpux10.20) aligns at 4 bytes.
    I tried to make a gcc for the m68k that aligns to 4 bytes but then gsqsls
    core dumped faster that you could type it in.

15. 

