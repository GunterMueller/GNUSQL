@INT_SHELL@
#
# prcgen-sh :  rpcgen workaround
#
# $Id: rpcgen-sh.in,v 1.7 1998/09/28 04:14:58 kimelman Exp $
#           
# This file is a part of GNU SQL Server
#
# Contacts: gss@ispras.ru
# 
# $Log: rpcgen-sh.in,v $
# Revision 1.7  1998/09/28 04:14:58  kimelman
# always add include proto.h when we remove rpc.h from files -
# to assure everything required has already included at the point.
#
# Revision 1.6  1998/09/13 20:18:19  kimelman
# simplified procressing & reduced number of obsolete temporary files
#
# Revision 1.5  1998/08/17 14:25:00  kimelman
# AWK settings
#
# Revision 1.4  1998/08/15 01:56:34  kimelman
# bugfix for direct mode : workaround for variable rpc PROGRAM id
#
# Revision 1.2  1998/07/30 03:23:34  kimelman
# DIRECT_MODE
#
#

rpcgen=$1
option=$2
incdir=$3
proto=$4
# =======================================
external_srcdir=no
include_h_brakets=no
direct_mode=no
# parse option
for opt in $option ; do
  case $opt in
  Ihdr) # include additional comments
    include_h_brakets=yes
     ;;
  dmode) # direct mode activated
    direct_mode=yes
     ;;
  *) ;;
  esac
done
# ------------
libdir=`echo $0 | tr '/' '|' | sed "s/|rpcgen-sh//g" | tr '|' '/' `
fname=`echo $proto | tr '/' '|' | sed "s/\.x//g;s/.*|//g" | tr '|' '/' `
macro_fname=`echo $fname | tr '[a-z]' '[A-Z]' | tr '.' '_' | tr '-' '_' `

fix() {
  tmpf=./$$.fix
  sed "$1" $2 >$tmpf
  rm $2
  mv $tmpf $2
}

if [ "x$incdir" = "x" ];  then
  echo target directory name is empty
  exit 1
fi
if [ "x$fname"  = "x" ]; then
  echo empty protocol file name 
  exit 1
fi
if [ ! -f $fname.x ]; then
  cp $proto $fname.x
  external_srcdir=yes
fi
# << RUN RPCGEN >>
echo "  rpcgen $fname.x --> $incdir/$fname.h"
$1 -T $fname.x
#----------------
if [ "$external_srcdir" = "yes" ]; then
  rm -f $fname.x
fi
proto_h=$incdir/$fname.h
tmpfile=__tmp__
[ -f ${tmpfile} ] || rm -f ${tmpfile}
echo "/* generated by $0 $* at `date`*/" >  ${tmpfile}
if [ "$include_h_brakets" = "yes" ]; then
  cat >>  ${tmpfile} <<EOF

#ifndef _${macro_fname}_RPCGEN
#define _${macro_fname}_RPCGEN

EOF
fi
echo '# include "conn_handler.h"' >>  ${tmpfile}

sed "s/CLIENT[ ]*\*/gss_client_t */g;s/struct rpcgen_table[ ]*{/struct RPCGEN_TABLE_${macro_fname} {/g" $fname.h >>${tmpfile}
rm  $fname.h
if [ "$include_h_brakets" = "yes" ]; then
  echo "#endif /*_${macro_fname}_RPCGEN*/" >>${tmpfile}
fi

$libdir/move-if-change mv ${tmpfile} $proto_h

for stub in ${fname}_svc.c ${fname}_clnt.c ${fname}_xdr.c ${fname}_tbl.i ; do
  cp $stub ${tmpfile}
  if [ "$include_h_brakets" = "yes" ]; then
    # we have already added '#include <rpc/rpc.h>' and '...time.h'
    # now we need to eliminate such includes from generated stubs
    fix "s/^#include.*rpc[.]h>/#include \"$fname.h\"/g;s/^#include.*time[.]h>//g" ${tmpfile}
  fi
  case $stub in 
  ${fname}_clnt.c )
    fix "s/([ ]*clnt_call[ ]*(/(gss_client_call(/g;s/CLIENT[ ]*\*/gss_client_t */g" ${tmpfile}
    ;;
  ${fname}_svc.c )
    if [ $direct_mode = yes ] ; then
#        grep "rpcgen_table" ${fname}_tbl.i | sed 's/^struct rpcgen_table [ ]*//g;s/_table\[\] = {[ ]*$//g' |
#        sed 's/^\([A-z_][0-9A-z_]*\)_\([0-9][0-9]*\)$/\1 \2/g' > ${tmpfile}.2
#        mv ${tmpfile} ${tmpfile}.1
        cat >${tmpfile} <<EOF
/*
 * Please do not edit this file.
 * It was generated by $0
 */

#include "${fname}.h"

#define main main_rpc_server
#define main_direct_server RUN_MY_SERVER

`cat ${stub} | sed 's/^[ ]*#[ ]*define [ ]*main [ ]*\([^ ][^ ]*\)$/#define RUN_MY_SERVER \1/g'`

#ifndef RPCGEN_ACTION
#define RPCGEN_ACTION 
#endif

`cat ${fname}_tbl.i`

gss_server_t *server = NULL;

static void
gss_server_exit(void)
{
    deallocate_gss_server(server);
}

int 
main_direct_server(
#ifdef RPCMAIN_PROTO
    int argc,
    char** argv
#else
    void
#endif
    )
{
  if (server==NULL) {
    ATEXIT(gss_server_exit);
    server = allocate_gss_server ();
` cat ${fname}_tbl.i | grep '^[ ]*struct rpcgen_table[ ]*.*\[\][ ]*=[ ]*{[ ]*$' |
  sed 's/^[ ]*struct rpcgen_table[ ]*//g;s/_table\[\] = {//g'  | 
  sed 's/^\(.*\)_\([0-9][0-9]*\)$/\1 \2/g' |
  @AWK@ '  { printf "    register_gss_service(server, %s, %d, %s_%d_table, %s_%d_nproc);\n", 
         toupper($1), $2, $1, $2, $1, $2 }
      '
`
  }
  return run_gss_server (server, -2); /* wait foreever */
}

EOF
#        rm ${tmpfile}.1
    fi
    ;;
  *)
  esac

  $libdir/move-if-change mv ${tmpfile} ${stub}
done
